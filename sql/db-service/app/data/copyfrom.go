// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.21.0
// source: copyfrom.go

package data

import (
	"context"
)

// iteratorForInsertBalances implements pgx.CopyFromSource.
type iteratorForInsertBalances struct {
	rows                 []InsertBalancesParams
	skippedFirstNextCall bool
}

func (r *iteratorForInsertBalances) Next() bool {
	if len(r.rows) == 0 {
		return false
	}
	if !r.skippedFirstNextCall {
		r.skippedFirstNextCall = true
		return true
	}
	r.rows = r.rows[1:]
	return len(r.rows) > 0
}

func (r iteratorForInsertBalances) Values() ([]interface{}, error) {
	return []interface{}{
		r.rows[0].Lastname,
		r.rows[0].Firstname,
		r.rows[0].City,
		r.rows[0].Balance,
	}, nil
}

func (r iteratorForInsertBalances) Err() error {
	return nil
}

func (q *Queries) InsertBalances(ctx context.Context, arg []InsertBalancesParams) (int64, error) {
	return q.db.CopyFrom(ctx, []string{"balances"}, []string{"lastname", "firstname", "city", "balance"}, &iteratorForInsertBalances{rows: arg})
}
